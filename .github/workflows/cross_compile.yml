name: build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-corss:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          # - target: x86_64-unknown-linux-gnu
          #   output: bore
          - target: x86_64-unknown-linux-musl
            output: bore
          # - target: x86_64-linux-android
          #   output: bore
          # - target: x86_64-pc-windows-gnu
          #   output: bore.exe
          # - target: aarch64-unknown-linux-gnu
          #   output: bore
          # - target: aarch64-unknown-linux-musl
          #   output: bore
          - target: aarch64-linux-android
            output: bore
          # - target: arm-unknown-linux-gnueabi
          #   output: bore
          # - target: arm-unknown-linux-gnueabihf
          #   output: bore
          # - target: arm-unknown-linux-musleabi
          #   output: bore
          # - target: arm-unknown-linux-musleabihf
          #   output: bore
          # - target: armv7-unknown-linux-gnueabi
          #   output: bore
          # - target: armv7-unknown-linux-gnueabihf
          #   output: bore
          # - target: armv7-unknown-linux-musleabi
          #   output: bore
          # - target: armv7-unknown-linux-musleabihf
          # output: bore
    steps:
      - uses: actions/checkout@v2
      - run: echo '[build]' > Cross.toml && echo 'build-std = true' >> Cross.toml
        if: contains(matrix.target, 'android')
      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: compile
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}
      - name: upload
        uses: actions/upload-artifact@v2
        with:
          name: bore-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/${{ matrix.output }}
  # build-windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       target:
  #         - x86_64-pc-windows-msvc
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: install toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: ${{ matrix.target }}
  #         override: true
  #     - name: compile
  #       uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: false
  #         command: build
  #         args: --release --target=${{ matrix.target }}
  #     - name: upload
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: bore-${{ matrix.target }}
  #         path: target/${{ matrix.target }}/release/bore.exe
  # build-apple:
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       target:
  #         - x86_64-apple-darwin
  #         - aarch64-apple-darwin
  #         - aarch64-apple-ios
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: install toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         target: ${{ matrix.target }}
  #         override: true
  #     - name: compile
  #       uses: actions-rs/cargo@v1
  #       with:
  #         use-cross: true
  #         command: build
  #         args: --release --target=${{ matrix.target }}
  #     - name: upload
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: bore-${{ matrix.target }}
  #         path: target/${{ matrix.target }}/release/bore
